# by cbshing
#	Example:
#
#	example_effect = {
#		add_energy = -100
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

cbshing_origins_setup_dyson_sphere_homeworld = {
	every_tile = {
		limit = { has_building = no }

		if = {
			limit = {
				has_building = no
				planet = {
					is_capital = yes
					NOT = { is_planet_class = pc_habitat }
				}
				has_resource = minerals
			}
			remove_blocker = yes
			set_building = building_mining_network_1
		}
		
		if = {
			limit = {
				has_building = no
				planet = {
					is_capital = yes
					NOT = { is_planet_class = pc_habitat }
					count_tile = {
						count < 3
						limit = { has_building = building_hydroponics_farm_1 }
					}
				}
				has_resource = food
			}
			remove_blocker = yes
			set_building = building_hydroponics_farm_1
		}
		
		if = {
			limit = {
				has_building = no
				planet = {
					is_capital = yes
					is_planet_class = pc_habitat
					count_tile = {
						count < 3
						limit = { has_building = building_hab_astro_mining_facility }
					}
				}
			}
			remove_blocker = yes
			set_building = building_hab_astro_mining_facility
		}

		if = {
			limit = {
				has_building = no
				planet = {
					is_capital = yes
					is_planet_class = pc_habitat
					count_tile = {
						count < 3
						limit = { has_building = building_hab_agri_bay }
					}
				}
			}
			remove_blocker = yes
			set_building = building_hab_agri_bay
		}
	}
	
	every_tile = {
		limit = { has_building = yes }
		if = {
			limit = {
				has_building = building_power_plant_1
				planet = {
					is_capital = yes
					NOT = { is_planet_class = pc_habitat }
				}
			}
			remove_blocker = yes
			remove_building = yes
			set_building = building_mining_network_1
		}
		if = {
			limit = {
				has_building = building_hab_solar_power_processor
				planet = {
					is_capital = yes
					is_planet_class = pc_habitat
				}
			}
			remove_blocker = yes
			remove_building = yes
			set_building = building_hab_astro_mining_facility
		}
	}
	
	if = { limit = { owner = { has_authority = auth_machine_intelligence } }
		every_tile = {
			limit = { has_building = yes }
			if = {
				limit = {
					has_building = building_hydroponics_farm_1
					planet = {
						is_capital = yes
						NOT = { is_planet_class = pc_habitat }
					}
				}
				remove_blocker = yes
				remove_building = yes
				set_building = building_power_plant_1
			}
			if = {
				limit = {
					has_building = building_hab_agri_bay
					planet = {
						is_capital = yes
						is_planet_class = pc_habitat
					}
				}
				remove_blocker = yes
				remove_building = yes
				set_building = building_hab_solar_power_processor
			}
		}
	}
	
	if = { limit = { is_capital = yes }
		# 2-4 extra pops on capital planet
		create_pop = { species = owner_main_species }
		create_pop = { species = owner_main_species }
		random_list = {
			1 = {
			}
			1 = {
				create_pop = { species = owner_main_species }
			}
			1 = {
				create_pop = { species = owner_main_species }
				create_pop = { species = owner_main_species }
			}
		}
	}
}

# add hyperlane to neighbor hostile star if not existing
# Scope: Solar System
add_dyson_hostile_neighbor_hyperlane = {
	this = { save_event_target_as = dyson_home_star }
	random_neighbor_system = { 
		ignore_hyperlanes = yes
		limit = { has_star_flag = origins_hostile }
		if = {
			limit = { NOT = { has_hyperlane_to = event_target:dyson_home_star } }
			add_hyperlane = { from = this to = event_target:dyson_home_star }
		}
	}
}

########################UNUSED###############################


# give dyson engineers technologies
# Scope: Country
cbshing_origins_give_dyson_engineers_technologies = {
	give_technology = { tech = "tech_powered_exoskeletons" message = no }
	#give_technology = { tech = "tech_robotic_workers" message = no }
	#give_technology = { tech = "tech_droid_workers" message = no }
	give_technology = { tech = "tech_mining_network_2" message = no }
	give_technology = { tech = "tech_mining_network_3" message = no }
	give_technology = { tech = "tech_mineral_processing_1" message = no }
	give_technology = { tech = "tech_engineering_lab_1" message = no }
	give_technology = { tech = "tech_engineering_lab_2" message = no }
	#give_technology = { tech = "tech_engineering_lab_3" message = no }
}
cbshing_origins_give_dyson_engineers_starbase_technologies = {
	give_technology = { tech = "tech_starbase_5" message = no }
	give_technology = { tech = "tech_starbase_4" message = no }
	give_technology = { tech = "tech_starbase_3" message = no }
}
cbshing_origins_give_dyson_engineers_ship_technologies  = {
	give_technology = { tech = "tech_battleships" message = no }
	give_technology = { tech = "tech_cruisers" message = no }
	give_technology = { tech = "tech_destroyers" message = no }
}
cbshing_origins_give_dyson_engineers_robots_technologies = {
	give_technology = { tech = "tech_powered_exoskeletons" message = no }
	give_technology = { tech = "tech_robotic_workers" message = no }
	give_technology = { tech = "tech_droid_workers" message = no }
}
cbshing_origins_give_dyson_engineers_mining_technologies = {
	give_technology = { tech = "tech_mining_network_4" message = no }
	give_technology = { tech = "tech_mining_network_3" message = no }
	give_technology = { tech = "tech_mining_network_2" message = no }
}
cbshing_origins_give_dyson_engineers_armor_technologies = {
	give_technology = { tech = "tech_ship_armor_4" message = no }
	give_technology = { tech = "tech_ship_armor_3" message = no }
	give_technology = { tech = "tech_ship_armor_2" message = no }
}
cbshing_origins_give_dyson_engineers_random_technology_1 = {
	give_technology = { tech = "tech_corvette_build_speed" message = no }
	give_technology = { tech = "tech_corvette_hull_1" message = no }
	#give_technology = { tech = "tech_corvette_hull_2" message = no }
	#give_technology = { tech = "tech_strike_craft_1" message = no }
	#give_technology = { tech = "tech_strike_craft_2" message = no }
	#give_technology = { tech = "tech_ship_armor_2" message = no }
}
cbshing_origins_give_dyson_engineers_random_technology_2 = {
	give_technology = { tech = "tech_destroyers" message = no }
	#give_technology = { tech = "tech_destroyer_build_speed" message = no }
	#give_technology = { tech = "tech_destroyer_hull_1" message = no }
	#give_technology = { tech = "tech_strike_craft_1" message = no }
	#give_technology = { tech = "tech_ship_armor_2" message = no }
}
cbshing_origins_give_dyson_engineers_random_technology_3 = {
	#give_technology = { tech = "tech_starbase_3" message = no }
	give_technology = { tech = "tech_strike_craft_1" message = no }
	give_technology = { tech = "tech_strike_craft_2" message = no }
	#give_technology = { tech = "tech_ship_armor_2" message = no }
}

cbshing_origins_make_dyson_physicist_genius = {
	random_owned_leader = {
		limit = {
			is_researching_area = physics
		}
		if = {
			limit = {
				NOT = { has_trait = leader_trait_spark_of_genius }
			}
			add_trait = leader_trait_spark_of_genius 
		}	
	}
}

add_dyson_neighbor_hyperlane = {
	this = { save_event_target_as = dyson_home_star }
	random_neighbor_system = { 
		ignore_hyperlanes = yes
		limit = { NOT = { has_star_flag = dyson_hyperlane_star } }
		add_hyperlane = { from = this to = event_target:dyson_home_star }
		set_star_flag = dyson_hyperlane_star
	}
}

remove_dyson_neighbor_hyperlanes = {
	this = { save_event_target_as = hyperlane_to_star }
	random_neighbor_system = {
		ignore_hyperlanes = no
		remove_hyperlane = { from = this to = event_target:hyperlane_to_star  }
	}
}

add_gateway_construction_option = {
	add_seen_bypass_type = gateway
	set_country_flag = encountered_first_gateway
	give_technology = { tech = "tech_gateway_activation" message = no }
	give_technology = { tech = "tech_gateway_construction" message = no }
}

spawn_dyson_crystal_blue_neighbors = {
	set_star_flag = hostile_system
	set_star_flag = blue2_system
	
	random_system_planet = {
		limit = {
			is_star = no
		}
		save_event_target_as = blue2_trigger_1
	}
	random_system_planet = {
		limit = {
			is_star = no
			NOT = {
				is_same_value = event_target:blue2_trigger_1
			}
		}
		save_event_target_as = blue2_trigger_2
	}
	random_system_planet = {
		limit = {
			is_star = no
			NOT = {
				is_same_value = event_target:blue2_trigger_1
				is_same_value = event_target:blue2_trigger_2
			}
		}
		save_event_target_as = blue2_trigger_3
		create_crystal_country = yes
		event_target:crystal_country = {
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Blue"
					}
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Medium_Crystal_Entity_Blue"
					}
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Blue"
					}
					set_location = PREVPREV
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 350
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Blue"
					}
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Medium_Crystal_Entity_Blue"
					}
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Blue"
					}
					set_location = event_target:blue2_trigger_2
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 350
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Blue"
					}
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Medium_Crystal_Entity_Blue"
					}
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Blue"
					}
					set_location = event_target:blue2_trigger_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 350
				}
			}
		}
	}
}

spawn_dyson_crystal_green_neighbors = {
	set_star_flag = hostile_system
	set_star_flag = green2_system
	
	random_system_planet = {
		limit = {
			is_star = no
		}
		save_event_target_as = green2_trigger_1
	}
	random_system_planet = {
		limit = {
			is_star = no
			NOT = {
				is_same_value = event_target:green2_trigger_1
			}
		}
		save_event_target_as = green2_trigger_2
	}
	random_system_planet = {
		limit = {
			is_star = no
			NOT = {
				is_same_value = event_target:green2_trigger_1
				is_same_value = event_target:green2_trigger_2
			}
		}
		save_event_target_as = green2_trigger_3
		create_crystal_country = yes
		event_target:crystal_country = {
			save_event_target_as = green2_owner
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					create_ship = {
						name = "NAME_Iota"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					create_ship = {
						name = "NAME_Mu"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					set_location = event_target:green2_trigger_3
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 240
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					create_ship = {
						name = "NAME_Iota"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					create_ship = {
						name = "NAME_Mu"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					set_location = event_target:green2_trigger_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 240
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					create_ship = {
						name = "NAME_Iota"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					create_ship = {
						name = "NAME_Mu"
						design = "NAME_Small_Crystal_Entity_Green"
					}
					set_location = event_target:green2_trigger_2
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 240
				}
			}
		}
	}
}

spawn_dyson_crystal_red_neighbors = {
	set_star_flag = hostile_system
	set_star_flag = red2_system

	random_system_planet = {
		limit = {
			is_star = no
			is_moon = no
		}
		save_event_target_as = red2_trigger_1
	}
	random_system_planet = {
		limit = {
			is_star = no
			is_moon = no
			NOT = {
				is_same_value = event_target:red2_trigger_1
			}
		}
		save_event_target_as = red2_trigger_2
	}
	random_system_planet = {
		limit = {
			is_star = no
			is_moon = no
			NOT = {
				is_same_value = event_target:red2_trigger_1
				is_same_value = event_target:red2_trigger_2
			}
		}
		save_event_target_as = red2_trigger_3
	}
	random_system_planet = {
		limit = {
			is_star = no
			is_moon = no
			NOT = {
				is_same_value = event_target:red2_trigger_1
				is_same_value = event_target:red2_trigger_2
				is_same_value = event_target:red2_trigger_3
			}
		}
		save_event_target_as = red2_trigger_4
		create_crystal_country = yes
		event_target:crystal_country = {
			save_event_target_as = red2_crystals
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Omicron"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Kappa"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Lambda"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Tau"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					set_location = event_target:red2_trigger_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 300
					queue_actions = {
						repeat = {
							wait = {
								duration = 9999
							}
						}
					}
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Large_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Omicron"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Kappa"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Lambda"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Tau"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					set_location = event_target:red2_trigger_2
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 300
					queue_actions = {
						repeat = {
							wait = {
								duration = 9999
							}
						}
					}
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Large_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Omicron"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Kappa"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Lambda"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Tau"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					set_location = event_target:red2_trigger_3
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 300
					queue_actions = {
						repeat = {
							wait = {
								duration = 9999
							}
						}
					}
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Entity"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Alpha"
						design = "NAME_Large_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Omicron"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Kappa"
						design = "NAME_Medium_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Lambda"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					create_ship = {
						name = "NAME_Tau"
						design = "NAME_Small_Crystal_Entity_Red"
					}
					set_location = event_target:red2_trigger_4
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 300
					queue_actions = {
						repeat = {
							wait = {
								duration = 9999
							}
						}
					}
				}
			}
		}
	}
}

spawn_dyson_crystal_elite_neighbors = {
	set_star_flag = hostile_system
	set_star_flag = elite_system
	
	random_system_planet = {
		limit = { is_star = yes }
		create_crystal_country = yes
		event_target:crystal_country = {
			save_event_target_as = elite1_owner
			create_fleet = {
				name = "NAME_Crystalline_Elites"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Red_Elite"
					}
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Medium_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Yellow_Elite"
					}
					create_ship = {
						name = "NAME_Beta"
						design = "NAME_Large_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = "NAME_Gamma"
						design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
					}
					create_ship = {
						name = "NAME_Psi"
						design = "NAME_Small_Crystal_Entity_Red_Elite"
					}
					set_location = PREVPREV
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 500
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Elites"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Yellow_Elite"
					}
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Medium_Crystal_Entity_Red_Elite"
					}
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = "NAME_Beta"
						design = "NAME_Large_Crystal_Entity_Red_Elite"
					}
					create_ship = {
						name = "NAME_Gamma"
						design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
					}
					create_ship = {
						name = "NAME_Psi"
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					set_location = PREVPREV
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 500
				}
			}
			create_fleet = {
				name = "NAME_Crystalline_Elites"
				effect = {
					set_owner = event_target:crystal_country
					create_ship = {
						name = "NAME_Delta"
						design = "NAME_Large_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = "NAME_Epsilon"
						design = "NAME_Medium_Crystal_Entity_Red_Elite"
					}
					create_ship = {
						name = "NAME_Omega"
						design = "NAME_Small_Crystal_Entity_Yellow_Elite"
					}
					create_ship = {
						name = "NAME_Beta"
						design = "NAME_Large_Crystal_Entity_Yellow_Elite"
					}
					create_ship = {
						name = "NAME_Gamma"
						design = "NAME_Medium_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = "NAME_Psi"
						design = "NAME_Small_Crystal_Entity_Red_Elite"
					}
					set_location = PREVPREV
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 500
				}
			}
		}
	}
}

spawn_dyson_amoeba_neighbors = {
	set_star_flag = hostile_system
	set_star_flag = amoeba_system

	every_system_planet = {
		limit = { is_star = no }
		create_amoeba_country = yes
		event_target:amoeba_country = {
			create_fleet = {
				name = "NAME_Space_Amoeba"
				effect = {
					set_owner = event_target:amoeba_country
					create_ship = {
						name = "NAME_Ortus"
						design = "NAME_Large_Space_Organism_Orange"
					}
					create_ship = {
						name = "NAME_Oriens"
						design = "NAME_Large_Space_Organism_Orange"
					}
					create_ship = {
						name = "NAME_Cortus"
						design = "NAME_Large_Space_Organism_Orange"
					}
					set_location = PREVPREV
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 300
				}
			}
		}
	}
}

spawn_dyson_mining_drones_neighbors = {
	set_star_flag = hostile_system
	set_star_flag = drone2_system
	
	every_system_planet = {
		limit = { has_deposit_for = shipclass_mining_station }
		create_drone_country = yes
		event_target:drone_country = {
			save_event_target_as = mining_drones2
			set_graphical_culture = ancient_drone_01
			create_fleet = {
				name = "NAME_Ancient_Mining_Drones"
				effect = {
					set_owner = event_target:drone_country
					create_ship = {
						name = "NAME_Drone_1832-D"
						design = "NAME_Ancient_Mining_Drone"
					}
					create_ship = {
						name = "NAME_Drone_0931-F"
						design = "NAME_Ancient_Combat_Drone"
					}
					create_ship = {
						name = "NAME_Drone_1119-X"
						design = "NAME_Ancient_Combat_Drone"
					}
					set_location = PREVPREV
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 500
				}
			}
		}
		create_mining_station = {
			owner = event_target:mining_drones2
		}
	}
}